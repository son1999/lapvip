<?php

namespace App\Modules\BackEnd\Controllers;

use App\Imports\CouponsImport;
use App\Libs\Lib;
use App\Models\InstallmentDetail;
use App\Models\InstallmentScenarios;
use Illuminate\Support\Facades\Auth;
use Maatwebsite\Excel\Facades\Excel;
use Validator;
use Illuminate\Http\Request;
use App\Models\InstallmentScenarios as THIS;

class InstallmentScenariosController extends BackendController
{
    protected $recperpage = 9999;
    protected $timeStamp = 'created';

    protected $coupons = [];

    public function __construct(){
        parent::__construct(new THIS());

        $this->registerAjax('get-all-pagers', 'ajaxAllPagers_requried');
    }

    public function index(Request $request){
        $order = 'id DESC';
        $cond = [['status','>','0']];
        if($request->title != ''){
            $cond[] = ['title','LIKE','%'.$request->title.'%'];
        }
        if(!empty($cond)) {
            $data = THIS::where($cond)->orderByRaw($order)->paginate($this->recperpage);
        }else{
            $data = THIS::orderByRaw($order)->paginate($this->recperpage);
        }

        return $this->returnView('index', [
            'data' => $data,
            'site_title' => 'Kịch bản trả góp',
            'search_data' => $request
        ]);
    }


    public function beforeSave(Request $request, $ignore_ext = [])
    {
        $arr_unset =[];
        $this->process_laters->properties = InstallmentDetail::returnProperties_scenarios($request,$arr_unset);
        parent::beforeSave($request); // TODO: Change the autogenerated stub
//        dd($request->all());
//        $this->model->surcharge = intval(str_replace([',','.'], '', $this->model->surcharge));
//        if (!empty($request->pagers_required)) {
//            $this->model->pagers_required = implode(' | ', $request->pagers_required);
//        }
        $this->unsetFields($arr_unset);

        $this->model->status = $request->status ? $request->status : 1;
    }

    public function afterSave(Request $request)
    {
        parent::afterSave($request); // TODO: Change the autogenerated stub
        if($this->editMode && !empty($this->model->installment_scenarios)) {
            $detail = ['properties' => $this->process_laters->properties];
            $this->model->installment_scenarios()->update($detail);
        }else {
            $detail = new InstallmentDetail(['properties' => $this->process_laters->properties]);
            $this->model->installment_scenarios()->save($detail);
        }
    }

    protected function ajaxAllPagers_requried(Request $request)
    {
        $temp = InstallmentScenarios::getPagersById($request->input('id'));
        if(!empty($temp)) {
            return \Lib::ajaxRespond(true, 'success',$temp);
        }
        return \Lib::ajaxRespond(false, 'Không tìm thấy dữ liệu');
    }
}
