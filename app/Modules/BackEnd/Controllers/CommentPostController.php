<?php

namespace App\Modules\BackEnd\Controllers;

use App\Libs\LoadDynamicRouter;
use App\Models\Category;
use Illuminate\Http\Request;

use App\Models\Product;

use App\Models\Comment as THIS;

class CommentPostController extends BackendController
{
    protected $timeStamp = 'created';

    //config controller, ez for copying and paste
    public function __construct(){
        $this->bladeAdd = 'add';
        parent::__construct(new THIS());
        LoadDynamicRouter::loadRoutesFrom('FrontEnd');
        \View::share('catOpt', Category::get()->toArray());
        $this->registerAjax('status', 'ajaxStatus');
        $this->registerAjax('reply-cmt', 'ajaxReplyComment');

        \View::share('products', Product::where('status', '>', 0)->get()->toArray());
    }

    public function index(Request $request){
        $cond = [];
        if($request->id != ''){
            $cond[] = ['id', $request->id];
        }else {
            if ($request->status != '') {
                $cond[] = ['status', $request->status];
            } else {
                $cond[] = ['status', '>', 0];
            }
            if ($request->type_id != '') {
                $cond[] = ['type_id', $request->type_id];
            }
            if ($request->uid != '') {
                $cond[] = ['uid', 'LIKE', '%' . $request->uid . '%'];
            }
        }
        if(!empty($cond)) {
            $data = THIS::with(['product'])->where($cond)->where('type', '=', 1)->orderByRaw('created DESC, id DESC')->paginate($this->recperpage);
        }else{
            $data = THIS::orderByRaw('created DESC, id DESC')->paginate($this->recperpage);
        }
        
        return $this->returnView('index', [
            'data' => $data,
            'search_data' => $request,
        ]);
    }


    public function beforeSave(Request $request, $ignore_ext = [])
    {
        parent::beforeSave($request); // TODO: Change the autogenerated stub
        $this->model->status = $request->status;
        $this->model->comment_parent = ($request->id) ? $request->id : 0;
    }
    

    public function ajaxStatus(Request $request){
        if($request->id > 0) {
            $data = $this->model::find($request->id);
            if ($data) {
                $before = $data->status;
                $data->status = $before == 1 ? 2 : 1;
                $data->save();
                \MyLog::do()->add($this->key.'-status', $data->id, $data->status, $before);
                return \Lib::ajaxRespond(true, 'success');
            }
        }
        return \Lib::ajaxRespond(false, 'Không tìm thấy dữ liệu');
    }
    
    public function ajaxReplyComment(Request $request){
        // dd($request->commnet);
        if (!empty($request->parent_id)) {
            $cmt = new THIS();
            $cmt->aid = \Auth::user()->id;
            $cmt->type = 1;
            $cmt->type_id = $request->post_id;
            $cmt->comment = $request->data;
            $cmt->status = 1;
            $cmt->created = time();
            $cmt->comment_parent = $request->parent_id;
            $cmt->save();
            \MyLog::do()->add($this->key.'-add', $cmt->id, $cmt);
            return \Lib::ajaxRespond(true, 'success', $cmt->id);
        }
        return \Lib::ajaxRespond(false, 'Không tìm thấy dữ liệu');
    }


}
