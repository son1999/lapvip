<?php

namespace App\Modules\BackEnd\Controllers;

use App\Imports\CouponsImport;
use App\Libs\Lib;
use Illuminate\Support\Facades\Auth;
use Maatwebsite\Excel\Facades\Excel;
use Validator;
use Illuminate\Http\Request;
use App\Models\Coupon as THIS;

class CouponController extends BackendController
{
    protected $recperpage = 9999;
    protected $timeStamp = 'created';

    protected $coupons = [];

    public function __construct(){
        parent::__construct(new THIS());

        \View::share('types',THIS::listType());
        \View::share('no_btn_add',1);
    }

    public function index(Request $request){
        $order = 'id DESC';
        $cond = [['status','>','0']];
        if($request->type != ''){
            $cond[] = ['type','=',$request->type];
        }
        if($request->code != ''){
            $cond[] = ['code','LIKE','%'.$request->code.'%'];
        }
        if(!empty($cond)) {
            $data = THIS::where($cond)->orderByRaw($order)->paginate($this->recperpage);
        }else{
            $data = THIS::orderByRaw($order)->paginate($this->recperpage);
        }

        return $this->returnView('showSysCoupon', [
            'data' => $data,
            'site_title' => 'MGG hệ thống',
            'search_data' => $request
        ]);
    }

    public function import(Request $request)
    {
        if($request->hasFile('file')) {
            Excel::import(new CouponsImport, request()->file('file'));
            return redirect()->route('admin.coupon')->with('status', 'Dữ liệu đã được nhập thành công');
        }
        return redirect()->route('admin.coupon')->withErrors(['file_error'=>'File lỗi! Hãy kiểm tra lại.']);
    }
    public function saveAjax(Request $request){

        $validator = Validator::make($request->all(), [
            'code' => 'required|unique:coupons,code|max:10',
            'value' => 'required|max:255',
            'expired' => 'required',
//            'started' => 'required'
        ]);

        if ($validator->fails()) {
            return redirect()
                ->back()
                ->withErrors($validator)
                ->withInput();
        }

        $data[] = array(
            'code'=>$request->code,
            'created'=>time(),
            'value'=>$request->value,
            'type'=>$request->type,
            'expired'=>strtotime(str_replace('/', '-', $request->expired)),
//                'started'=>strtotime(str_replace('/', '-', $request->started)),
            'quantity' => $request->quantity,
            'user_id'=>\Auth::id(),
            'lang' => \Lib::getDefaultLang(),
            'object_id' => $request->object_id,
        );
        if(THIS::insert($data)){
//            return redirect()->route('admin.coupon.show')->with('status', 'Dữ liệu đã được thêm thành công');
            return redirect()->back()->with('status', 'Dữ liệu đã được thêm thành công');
        } else{
            return redirect()->back()->withErrors(['file_error'=>'File lỗi! Hãy kiểm tra lại.']);
        }
    }

    public function beforeSave(Request $request, $ignore_ext = [])
    {
        parent::beforeSave($request); // TODO: Change the autogenerated stub

        if(!empty($request->expired)){
            $this->model->expired = Lib::getTimestampFromVNDate($request->expired);
        }

        $this->model->user_id = \Auth::id();
        $this->model->lang = \Lib::getDefaultLang();
    }

    public function quickRandom($length = 6)
    {
        $pool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
        $token = substr(str_shuffle(str_repeat($pool, $length)), 0, $length);
        if(!in_array($token,$this->coupons)){
            $this->coupons[] = $token;
            $check = THIS::where('code',$token)->first();
            if(!$check){
                return $token;
            }
        }

        return $this->quickRandom($length);
    }
}
